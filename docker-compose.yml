version: '3.8'

services:
  
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: landing-admin-app
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - DEBUG=1
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=landing_admin
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres123
      - SESSION_REDIS=redis://redis:6379/1
      - CACHE_REDIS_URL=redis://redis:6379/2
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./static/uploads:/app/static/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - landing-admin-network
    restart: unless-stopped
    
  postgres:
    image: postgres:15-alpine
    container_name: landing-admin-postgres
    environment:
      POSTGRES_DB: landing_admin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d landing_admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - landing-admin-network
    restart: unless-stopped
    
  redis:
    image: redis:7-alpine
    container_name: landing-admin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - landing-admin-network
    restart: unless-stopped
    
  nginx:
    image: nginx:alpine
    container_name: landing-admin-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/var/www/static:ro
      - ./ssl:/etc/nginx/ssl:ro  
    depends_on:
      - app
    networks:
      - landing-admin-network
    restart: unless-stopped
    profiles:
      - production
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: landing-admin-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - landing-admin-network
    restart: unless-stopped
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  landing-admin-network:
    driver: bridge